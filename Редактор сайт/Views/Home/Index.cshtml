@model Text 
@{
    ViewData["Title"] = "Редактор";
}

<h1>Редактор</h1>

<form method="post" asp-controller="Home" asp-action="Offormlenie">

    <div id="radioBox">
        <div id="radioBoxTeg">
            <label class="radio-label">Добавлять ли &lt;tab&gt; и &lt;center&gt;?</label>
            <div class="radio-group">
                <label class="radio-option">
                    <input type="radio" asp-for="OptionT" value="да" checked> Да
                </label>
                <label class="radio-option">
                    <input type="radio" asp-for="OptionT" value="нет"> Нет
                </label>
            </div>
        </div>
        <div id="radioBoxParagraph">
            <label class="radio-label">Добавлять ли абзац между диалогом и текстом?</label>
            <div class="radio-group">
                <label class="radio-option">
                    <input type="radio" asp-for="OptionP" value="да" checked> Да
                </label>
                <label class="radio-option">
                    <input type="radio" asp-for="OptionP" value="нет"> Нет
                </label>
            </div>
        </div>
        <img src="/cat3.svg" class="cat-image" alt="Cat Image">
    </div>


    <label asp-for="Текст"></label>
    <textarea id="myTextarea" asp-for="Текст" oninput="countWords()"></textarea>
    <span asp-validation-for="Текст"></span>

    <div id="wordCount">Количество слов: 0</div>
    <div id="charCount">Количество слов: 0 / 100 000</div>
    <input type="submit" value="Редактировать" />

    @* я не знаю почему, но у меня работает только так *@
    @if (!string.IsNullOrEmpty(Model.Текст_после))
    {
        <input type="submit" value="Очистить" name="ClearText" style="margin-left:15px;"/>
        <label asp-for="Текст_после"></label>
        <textarea readonly asp-for="Текст_после"></textarea>
        <input type="button" value="Скопировать" onclick="copyToClipboard()" />
    }

    <div id="exampleLabel">Пример</div>
    <div class="example">
        <div class="block">
            <div class="label">Текст</div>
            <textarea readonly class="textarea" rows="10">
Здравствуйте. это короткий пример для вас

рассмотрим парочку случаев: 
- Вот это у нас диалог. обратите внимание, что тут есть пробел после тире
-а тут нет! И так работать тоже будет!
***
Как вы видите, диалог и простой текст могут разделяться абзацами (если вы этого хотите).
- Диалог.
- Очень интересный диалог. 
Текст. 

Еще можно поставить пустой абзац не к месту, но он не сохранится. 



Но много абзацев сведутся к одному.
На этом у меня все, спасибо за внимание!
            </textarea>
        </div>
        <div class="block">
            <div class="label">С &lt;tab&gt; и &lt;center&gt; и пустыми абзацами</div>
            <textarea readonly class="textarea" rows="10">
&lt;tab&gt;Здравствуйте. Это короткий пример для вас.
&lt;tab&gt;Рассмотрим парочку случаев:

&lt;tab&gt;— Вот это у нас диалог. Обратите внимание, что тут есть пробел после тире.
&lt;tab&gt;— А тут нет! И так работать тоже будет!

&lt;center&gt;***&lt;/center&gt;
&lt;tab&gt;Как вы видите, диалог и простой текст разделяются абзацами.

&lt;tab&gt;— Диалог.
&lt;tab&gt;— Очень интересный диалог.

&lt;tab&gt;Текст.
&lt;tab&gt;Еще можно поставить пустой абзац не к месту, но он не сохранится.
&lt;tab&gt;Но много абзацев сведутся к одному.
&lt;tab&gt;На этом у меня все, спасибо за внимание!
            </textarea>
        </div>
        <div class="block">
            <div class="label">Без &lt;tab&gt; и &lt;center&gt; и без пустых абзацев</div>
            <textarea readonly class="textarea" rows="10">
Здравствуйте. Это короткий пример для вас.
Рассмотрим парочку случаев:
— Вот это у нас диалог. Обратите внимание, что тут есть пробел после тире.
— А тут нет! И так работать тоже будет!

***

Как вы видите, диалог и простой текст не разделяются абзацами.
— Диалог.
— Очень интересный диалог.
Текст.
Еще можно поставить пустой абзац не к месту, но он не сохранится.
Но много абзацев сведутся к одному.
На этом у меня все, спасибо за внимание!
            </textarea>
        </div>
    </div>

    <div id="instracktLabel">Функции</div>
    <label id="instrackt" style="display: block; text-align: left; margin-top: 20px;">
        Основная функция: редактирование текста с использованием инструментов, принятых на некоторых сайтах, в частности Фикбуке (&lt;tab&gt;, &lt;center&gt;).
        <br /><br />
        Конкретнее о подфункциях:
        <ol style="margin-left: 20px;">
            <li>Все короткие тире «-» заменяются на длинные «—», если это не дефис;</li>
            <li>Каждый новый абзац начинается с отступа (если вы так хотите);</li>
            <li>Между абзацами разного типа (простой текст и диалог) ставится пустая строка (если вы так хотите);</li>
            <li>Разделение в виде последовательности «***» или более, помещается в центр;</li>
            <li>Большое количество пустых строк сводится к одной;</li>
            <li>Повышение регистра первой буквы в абзаце и знака пунктуации;</li>
            <li>Проставление точек в конце абзаца, если нет чего-либо из пунктуации.</li>
        </ol>
    </label>
</form>

<script>
    function copyToClipboard() {
        var textarea = document.querySelector("textarea[readonly]");
        textarea.select();
        document.execCommand("copy");

        var message = document.createElement('div');
        message.id = 'copyMessage';
        message.textContent = 'Скопировано в буфер обмена';
        document.body.appendChild(message);

    }
    
    const textarea = document.getElementById('myTextarea');

    textarea.addEventListener('input', (event) => {
        // Получаем введенный текст
        const value = event.target.value;

        // Проверяем длину текста
        if (value.length > 100000) {
            // Удаляем лишние символы
            textarea.value = value.substring(0, 100000);

            // Отображаем сообщение об ошибке
            alert('Превышен лимит символов (100 000).');
        }
    });

    function countWords() {
        const text = document.getElementById("myTextarea").value;
        // Разбиваем текст по пробелам и удаляем лишние пробелы
        const words = text.split(/\s+/); // Разделяем по пробелам
        // Подсчитываем количество "слов", которые содержат хотя бы одну букву
        const wordCount = words.filter(word => /[a-zA-Zа-яА-ЯёЁ]/.test(word)).length;
        const charCount = text.length;

        // Обновляем счетчики
        document.getElementById("wordCount").textContent = "Количество слов: " + wordCount;
        document.getElementById("charCount").textContent = "Количество символов: " + charCount +" / 100 000";
    }
</script>